name: Release

on:
  push:
    branches: trunk
    paths:
      - ".github/workflows/web-cd.yml"
      - "packages/web/**"
      - ".github/workflows/cloudformation-cd.yml"
      - ".orchestration/cloudformation/**"

env:
  ENVIRONMENT_NAME: production
  AWS_S3_BUCKET: app.agilelytics.ca
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy-cloudformation:
    name: Deploy Cloudformation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Convert Website Name
        run: |
          SAFE_WEBSITE_NAME=$(echo $AWS_S3_BUCKET | sed 's/\./-/g')
          echo "SAFE_WEBSITE_NAME=${SAFE_WEBSITE_NAME}" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.SAFE_WEBSITE_NAME }}-${{ env.ENVIRONMENT_NAME }}
          template: .orchestration/cloudformation/s3-static-site.yml
          parameter-overrides: "EnvironmentName=${{ env.ENVIRONMENT_NAME }},WebsiteName=${{ env.AWS_S3_BUCKET }}"
          tags: >
            [{
              "Key": "website",
              "Value": "${{ env.AWS_S3_BUCKET }}"
            }]
          no-fail-on-empty-changeset: 1

  build-test-deploy:
    name: Build, Test, Deploy
    runs-on: ubuntu-latest
    needs:
      - deploy-cloudformation
    strategy:
      matrix:
        package: [api, web]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Build & Test & Deploy
        working-directory: packages/${{ matrix.package }}
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t agilelytics/${{ matrix.package }}:latest \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg ENVIRONMENT_NAME=${{ env.ENVIRONMENT_NAME }} \
            --build-arg AWS_S3_BUCKET=${{ env.AWS_S3_BUCKET }} \
            --build-arg AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }} \
            --build-arg AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }} \
            --target deploy \
            .

  clear-cloudflare:
    name: Clear Cloudflare
    runs-on: ubuntu-latest
    needs:
      - build-test-deploy
    steps:
      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          PURGE_URLS: '["https://${{ env.AWS_S3_BUCKET }}/"]'
